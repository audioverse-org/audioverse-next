fragment andMiniplayer on Recording {
	id
	title
	canonicalPath(useFuturePath: true)
	duration
	sequence {
		title
		contentType
	}
	collection {
		title
	}
	audioFiles {
		url(requestType: STREAM)
		filesize
		mimeType
		duration
	}
	videoFiles(allowedContainers: [M4A, M4V, MOV, MP4]) {
		url(requestType: STREAM)
		filesize
		mimeType
		duration
	}
	videoStreams: videoFiles(allowedContainers: [M3U8_WEB]) {
		url(requestType: STREAM)
		logUrl
		filesize
		mimeType
		duration
	}
}

query getRecordingExtraData($id: ID!) {
	recording(id: $id) {
		publishDate
		sponsor {
			title
		}
		speakers: persons(role: SPEAKER) {
			name
		}
		contentType
	}
}

query getRecordingPlaybackProgress($id: ID!) {
	recording(id: $id) {
		viewerPlaybackSession {
			positionPercentage
		}
	}
}

mutation recordingPlaybackProgressSet($id: ID!, $percentage: Float!) {
	recordingPlaybackSessionAdvance(
		recordingId: $id
		input: { positionPercentage: $percentage }
	) {
		recording {
			viewerPlaybackSession {
				positionPercentage
			}
		}
	}
}
